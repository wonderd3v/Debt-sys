// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionWebApi.Models.Contexts;

namespace OnionWebApi.Models.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20211102145726_AddingPaymentsMadeColumn")]
    partial class AddingPaymentsMadeColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnionWebApi.Models.Entities.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("AmountOfPayments")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditorId")
                        .HasColumnType("int");

                    b.Property<int>("DebtorId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NextPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentsMade")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("DebtorId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("OnionWebApi.Models.Entities.LoanPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("PaymentId");

                    b.ToTable("LoanPayment");
                });

            modelBuilder.Entity("OnionWebApi.Models.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfRealization")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Voucher")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("OnionWebApi.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnionWebApi.Models.Entities.Loan", b =>
                {
                    b.HasOne("OnionWebApi.Models.Entities.User", "Creditor")
                        .WithMany("CreditorLoans")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnionWebApi.Models.Entities.User", "Debtor")
                        .WithMany("DebtorLoans")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creditor");

                    b.Navigation("Debtor");
                });

            modelBuilder.Entity("OnionWebApi.Models.Entities.LoanPayment", b =>
                {
                    b.HasOne("OnionWebApi.Models.Entities.Loan", null)
                        .WithMany("LoanPayments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnionWebApi.Models.Entities.Payment", null)
                        .WithMany("LoanPayments")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnionWebApi.Models.Entities.Loan", b =>
                {
                    b.Navigation("LoanPayments");
                });

            modelBuilder.Entity("OnionWebApi.Models.Entities.Payment", b =>
                {
                    b.Navigation("LoanPayments");
                });

            modelBuilder.Entity("OnionWebApi.Models.Entities.User", b =>
                {
                    b.Navigation("CreditorLoans");

                    b.Navigation("DebtorLoans");
                });
#pragma warning restore 612, 618
        }
    }
}
